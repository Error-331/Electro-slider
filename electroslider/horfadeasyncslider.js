/** * Main constructor function of the class. *  * Function that creates slider. *  * @access public    * * @param object usrConfig object that contains configuration options for the slider *                         */                               jQuery.fn.ElectroSlider.HorFadeAsyncSlider = function(usrConfig)  {       jQuery.fn.ElectroSlider.HorFadeAsyncSlider.SuperClass.constructor.call(this, usrConfig);   }  /* Core methods starts here */jQuery.fn.ElectroSlider.HorFadeAsyncSlider.prototype.RawSlidesProcessing = function(usrSlides)  {     var tmpSelf = this;     usrSlides.each(function(usrIndex, usrSlide)     {    var tmpSlide = null;    var tmpWidth = tmpSelf.MaxWidth;    var tmpHeight = tmpSelf.MaxHeight;                                  if (typeof usrSlide == 'object')      {                           if (usrSlide[1] != undefined && usrSlide[1] != null) {tmpWidth = usrSlide[1];}      if (usrSlide[2] != undefined && usrSlide[2] != null) {tmpHeight = usrSlide[2];}            }               tmpSlide = tmpSelf.jQuery('<div class="' + tmpSelf.CSSPrefix + '_ElectroSlider_SlidePreloader" style="width: ' + tmpWidth + 'px; height: ' + tmpHeight + 'px;" ><img src="' + tmpSelf.ImagesFolder + '/preloader.png"/></div>');            if ((tmpSelf.CurSlideIndex - 1) == usrIndex)       {      tmpSlideContOut = tmpSelf.jQuery('<div class="' + tmpSelf.CSSPrefix + '_ElectroSlider_SlidContOut" style="position:absolute; opacity: 1; alpha(opacity = 100);"></div>');      }    else       {      tmpSlideContOut = tmpSelf.jQuery('<div class="' + tmpSelf.CSSPrefix + '_ElectroSlider_SlidContOut" style="position:absolute; opacity: 0; alpha(opacity = 0);"></div>');      }                                        tmpSlideContOut = tmpSelf.jQuery('<div class="' + tmpSelf.CSSPrefix + '_ElectroSlider_SlidContOut" style="position:absolute;"></div>');                 tmpSlideContIn = tmpSelf.jQuery('<div class="' + tmpSelf.CSSPrefix + '_ElectroSlider_SlidContIn"></div>');          tmpSlideContIn.append(tmpSlide);    tmpSlideContOut.append(tmpSlideContIn);    tmpSelf.SliderContIn.append(tmpSlideContOut);          // Slide general values set    tmpSlideContOut.css('overflow', 'auto');    tmpSlideContOut.css('float', 'left');        // Preloader image centring    tmpSelf.PreloadPreloaderUtilFunc(tmpSlideContIn);                               // Slide save    if (tmpSelf.Slides == null) {tmpSelf.Slides = tmpSelf.jQuery(tmpSlideContOut);}    else {tmpSelf.Slides = tmpSelf.Slides.add(tmpSlideContOut);}          });                  this.onSlidesChange();  this.SelectItemInstant(this.CurSlideIndex);          } /** * Method that prepares slides of the slider. *  * Simple method that prepares necessary HTML code for the slides of the slider. *  * @access public    *                         */     jQuery.fn.ElectroSlider.HorFadeAsyncSlider.prototype.PrepareSlides = function()  {  jQuery.fn.ElectroSlider.HorFadeAsyncSlider.SuperClass.PrepareSlides.call(this);    }           /** * Method that selects slider item without any animation. *  * Simple method that selects slider item without any animation. *  * @access public    *  * @param int usrItem item to select *        * @return bool true if item was selected successfully and false if not *	     */ jQuery.fn.ElectroSlider.HorFadeAsyncSlider.prototype.SelectItemInstant = function(usrItem)  {         var tmpResult = jQuery.fn.ElectroSlider.HorTransSlider.SuperClass.SelectItemInstant.call(this, usrItem);    var tmpSlide = null;      if (tmpResult == false) {return false;}     tmpSlide = this.jQuery(this.Slides[usrItem - 1]);                               this.Slides.stop();    this.Slides.css('opacity', '0');  this.Slides.css('filter', 'alpha(opacity = 0)');     tmpSlide.css('opacity', 'inherit');  tmpSlide.fadeIn(0);                             this.CurSlideIndex = usrItem;   this.onResize();      return true;  }/** * Method that selects slider item utilising animation. *  * Simple method that selects slider item utilising animation. *  * @access public    *  * @param int usrStartItem item which will be used as animation start point * @param int usrEndItem item which will be used as animation end point   *        * @return bool true if item was selected successfully and false if not *	     */ jQuery.fn.ElectroSlider.HorFadeAsyncSlider.prototype.SelectItem = function(usrStartItem, usrEndItem)  {      var tmpSelf = this;        var tmpResult = jQuery.fn.ElectroSlider.HorTransSlider.SuperClass.SelectItem.call(this, usrStartItem, usrEndItem);      if (tmpResult == false) {return false;}    if (typeof usrStartItem != 'number' || usrStartItem <= 0 ||  usrStartItem > this.Slides.length) {return false;}  if (typeof usrEndItem != 'number')     {    if (typeof usrEndItem == 'undefined')      {      if (usrStartItem == 1) {return false;}        usrEndItem = usrStartItem;      usrStartItem = 1;      }    else {return false;}    }  else if (typeof usrEndItem == 'number' && (usrEndItem <= 0 || usrEndItem > this.Slides.length || usrEndItem == usrStartItem)) {return false;}  /* Initial values check ends here */         var tmpAnimObj = {};  var tmpDelay = this.Delay;  var Counter1 = 0;  var tmpAnimeWidth = 0;  var tmpAnimeHeight = 0;    var tmpStartSlide = this.jQuery(this.Slides[usrStartItem - 1]);  var tmpStopSlide = this.jQuery(this.Slides[usrEndItem - 1]);       this.Slides.stop();  this.Slides.css('opacity', '0');  this.Slides.css('filter', 'alpha(opacity = 0)');    tmpStartSlide.css('opacity', 'inherit');  tmpStopSlide.css('opacity', 'inherit');                                      ////this.Container.find('div.' + tmpSelf.CSSPrefix + '_ElectroSlider_SlidContOut').fadeOut(0);                          tmpStartSlide.fadeIn(0);  tmpStopSlide.fadeOut(0);                         tmpStartSlide.fadeOut(tmpDelay);    tmpStopSlide.fadeIn(tmpDelay);       this.CurSlideIndex = usrEndItem;  this.onResize();       return true;  }  /* Core methods ends here *//* Class extension and other actions starts here */if (jQuery.fn.ElectroSlider.CheckIsClassLoaded('hortransasyncslider', function()      {      jQuery.fn.ElectroSlider.ExtendClassAfter(jQuery.fn.ElectroSlider.HorFadeAsyncSlider, jQuery.fn.ElectroSlider.HorTransAsyncSlider);      jQuery.fn.ElectroSlider.onClassLoad('horfadeasyncslider');        }) == true)    {    jQuery.fn.ElectroSlider.ExtendClassAfter(jQuery.fn.ElectroSlider.HorFadeAsyncSlider, jQuery.fn.ElectroSlider.HorTransAsyncSlider);    jQuery.fn.ElectroSlider.onClassLoad('horfadeasyncslider');  }/* Class extension and other actions ends here */  